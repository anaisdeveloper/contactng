{"version":3,"sources":["./src/app/detail-contact/detail-contact.component.ts","./src/app/detail-contact/detail-contact.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/update-contact/update-contact.component.ts","./src/app/update-contact/update-contact.component.html","./src/app/create-contact/create-contact.component.ts","./src/app/create-contact/create-contact.component.html","./src/model/contact.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/architecture/architecture.component.ts","./src/app/architecture/architecture.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/app.module.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/save-contact/save-contact.component.ts","./src/app/save-contact/save-contact.component.html","./src/app/contacts/contacts.component.ts","./src/app/contacts/contacts.component.html","./src/services/contacts.service.ts","./src/app/snipper/snipper.component.ts","./src/app/snipper/snipper.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Contact } from 'src/model/contact';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContactsService } from 'src/services/contacts.service';\n\n@Component({\n  selector: 'app-detail-contact',\n  templateUrl: './detail-contact.component.html',\n  styleUrls: ['./detail-contact.component.css']\n})\nexport class DetailContactComponent implements OnInit {\n\n\n  contact: Contact = new Contact();\n  errorMessage : string = '';\n  error : boolean = false;\n  id : number;\n  showSnipper : boolean = true;\n\n  constructor(\n    public contactService: ContactsService, \n    public activatedRoute: ActivatedRoute,\n    public router: Router\n  ) { \n    \n  }\n\n  ngOnInit(): void {\n\n    if (this.activatedRoute.snapshot.params['id'] != null) {\n      this.id = this.activatedRoute.snapshot.params['id'];\n   \n\n    if (this.id != null) {\n        this.getContactFromService();\n        \n        \n       \n      \n      \n    } \n    }\n  }\n\n\n  //method getContactFromService\n  getContactFromService(){\n    this.contactService.getContact(this.id)\n        .subscribe({\n         next: data => {\n            console.log('data    ' + data);\n           \n           \n     \n            if (data != null) {\n              console.log('data fROM detail  ::::    ' + data);\n              this.contact= data;\n              this.showSnipper = false;\n             \n            }\n         },\n         error: error => {\n             this.errorMessage = error.message;\n             console.error('msg   !', this.errorMessage);\n             this.error = true;\n             \n         }\n     })\n  }\n\n  //method go_back()\n\n  go_back(){\n    this.router.navigate(['contacts', this.contact.nom]);\n  }\n\n}\n","\n  <!-- block content -->\n  <div id=\"detail-plant\" class=\"detail-plant flex col\">\n    <div class=\"detail-plant-content flex row\">\n        \n      <div class=\"container_photo flex col\">\n       \n        <div class=\"photo flex col\">\n            <app-snipper *ngIf=\"showSnipper\"></app-snipper>\n               \n            \n            <img   alt=\"plant photo\" [src]=\"contact.photo\" >\n        </div>\n\n       <div class=\"name flex row\"><h1>{{contact.prenom}} </h1></div>\n      </div>\n    \n    \n\n    <div class=\"container_def_plant flex col\">\n      \n        \n        <div class=\"def_plant_container flex col\">\n          <div class=\"botanicalName flex row\">LastName: {{contact.nom}}</div>\n          <div class=\"family flex row\">Date of Birth: {{contact.dateNaissance}}</div>\n          \n          <div class=\"origin flex row\">Email: {{contact.email}}</div>\n          <div class=\"origin flex row\">Phone: {{contact.phone}}</div>\n         \n        </div>\n        \n\n    </div>\n    \n    \n  </div>\n  <div class=\"go_back flex row\">\n    \n    <button class=\"button_search\" (click)=\"go_back()\">Go Back</button>\n  </div>\n  \n</div>\n\n  \n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor(\n    \n    \n    public router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  \n\n}\n","<div class=\"block_about flex col\">\n    <div class=\"container_about flex row\">\n      <svg class='contacts_svg' xmlns=\"http://www.w3.org/2000/svg\">\n          <text id='app_name' x=\"10%\" y=\"70%\">\n            ngcontact\n          </text>\n      </svg>\n      <div class=\"presentation_photo flex row\"></div>\n    </div>\n    <div class=\"block_presentation flex col\">\n      <div class=\"presentation flex col\">\n          \n            <p>ngcontact is simple  service that manages the contacts of any company. \n              Contact objects are stored in a MySQL database and access them via JPA </p> \n            <p>These Jpa entities can be accessed via Spring MVC layer</p>\n           \n         \n        <div class=\"presentation_fonction flex col\">\n          <h2>This application allows us to:</h2>\n          <p> * Manage contact (id, last name, first name, phone, email, phot).</p>\n          <p>* Display a list of contacts</p>\n          <p>* Search a list of contacts by keyword</p>\n          <p>* Add a new contact <strong>( the path of the photo must be valid &#38;&#38; start with https ....)</strong></p>\n          <p>* Edit a contact</p>\n          <p>* Delete a contact</p>\n        </div>\n  \n        <h2>This application is made up of two parts: </h2>\n        <div class=\"presentation_structure flex col\">\n            <p>1)- The Back-End is a JEE web application based on server-side Spring MVC, JPA, Spring Data, Hibernate and MySQL, (Restful API).</p>\n            <div class=\"backEnd flex col\">\n           \n               \n                <strong>Achievements:</strong>\n                 <p>- Create a Spring Starter project </p>\n                 <p>- Create JPA entitie</p>\n                 <p>- Create the JPA Repository interface based on Spring Data</p>\n                 <p>- Creation of the DB then the Configuration of the data source</p>\n                 <p>- Test the DAO layer (using JUnit)</p>\n                \n                 <p>- Creation of a rest controller service based on Spring MVC to wrap our repository with the web layer</p>\n                 <p>Test REST API with Postman</p>\n                <p>- Restful api deployment on heroku</p>\n     \n              </div>\n              <p>2)- The Front-End part is based on Angular 11</p>\n              <div class=\"frontEnd flex col\">\n           \n                \n                  <strong>Achievements:</strong>\n                  <p>- Creation a new Angular 11 project (ng create contacts-app)</p>\n                  <p>- Creation the contact class (ng g c name of class)</p>\n                  <p>- Creation of the necessary components (ng g c name of component)</p>\n                  <p>- Configuration of the routing and navigation Angular</p>\n                  <p>- Creation of service to interact with the Restful API using the httpClient module (ng g s name of service)</p>\n                  <p>- Contacts-app deployment on heroku</p>\n                  \n       \n                </div>\n        \n         \n          \n        </div>\n      </div>\n      </div>\n\n    \n      <button class=\"button_search\" routerLink=\"/architecture\">Architecture</button>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update-contact',\n  templateUrl: './update-contact.component.html',\n  styleUrls: ['./update-contact.component.css']\n})\nexport class UpdateContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>update-contact works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Contact } from 'src/model/contact';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ContactsService } from 'src/services/contacts.service';\n\n@Component({\n  selector: 'app-create-contact',\n  templateUrl: './create-contact.component.html',\n  styleUrls: ['./create-contact.component.css']\n})\nexport class CreateContactComponent implements OnInit {\n\n//declaration\n  title : string = \"\";\n  familys : string[];\n  contact : Contact = new Contact();\n  errorMessage : string = '';\n  error : boolean = false;\n  id : number = 0;\n  contactIsAdded : boolean = false;\n  isCreateContact : boolean = true;\n  https : string = '';\n  errorPathImage : string = '';\n  \n\n  /**\n * \n * contactForm\n * \n */\ncontactForm : FormGroup =  new FormGroup({\n  id : new FormControl(''),\n  nom : new FormControl(''),\n  prenom : new FormControl(''),\n  dateNaissance : new FormControl(''),\n  email : new FormControl(''),\n  phone : new FormControl(''),\n  photo : new FormControl(''),\n  \n});\n\n  constructor(\n    public contactService: ContactsService, \n    public activatedRoute: ActivatedRoute,\n    public router: Router\n  ) { \n    console.log(\"create component constr\");\n    if (this.activatedRoute.snapshot.params['id'] != null) {\n      this.id = this.activatedRoute.snapshot.params['id'];\n   \n\n    if (this.id != null) {\n      this.getContact();\n      \n       \n        this.isCreateContact = false;\n       \n        \n       \n      \n      \n    } \n    }\n  }\n\n  ngOnInit(): void {\n    console.log(\"create component init\");\n    if (this.isCreateContact) {\n      this.title = \"Create  New Contact\";\n      \n      \n      \n     \n    } else {\n      this.title = \"Update  Contact\";\n     \n      \n    }\n  }\n\n\n  //method onSubmit\n\n  onSubmit(): void{\n    \n    if (this.isCreateContact) {\n      this.contact = this.contactForm.value;\n      this.addContact();\n     \n      \n    } else {\n     \n      \n      \n      let id = this.contact.id;\n      \n      this.contact = this.contactForm.value;\n      this.contact.id = id;\n      this.editContact(this.contact);\n   \n     \n     \n  \n    }\n    \n    this.contactIsAdded = true;\n    this.https = (this.contactForm.controls.photo.value).substring(0,5);\n    console.log(\"https   \" + this.https);\n    if (this.https != 'https') {\n      this.errorPathImage = \" Path of image is not valid\";\n    }\n    this.contactForm.reset();\n   \n\n  }\n\n  //method get contact bu id\n  getContact(){\n    this.contactService.getContact(this.id)\n        .subscribe({\n         next: data => {\n            console.log('data    ' + data);\n           \n           \n     \n            if (data != null) {\n            \n              this.contact = JSON.parse(JSON.stringify(data));\n              this.title = \"Update Plant\";\n              this.isCreateContact = false;\n             \n            \n              this.contactForm.patchValue({\n                nom: this.contact.nom,\n                prenom: this.contact.prenom,\n                dateNaissance : this.contact.dateNaissance,\n                email : this.contact.email,\n                phone : this.contact.phone,\n                photo : this.contact.photo,\n              });\n            \n              \n              \n              \n            }\n         },\n         error: error => {\n             this.errorMessage = error.message;\n            \n            \n             this.error = true;\n             \n         }\n     })\n  }\n//method add Contact\n  addContact(){\n    this.contactService.saveContact(this.contact)\n    .subscribe({\n      next: data => {\n         \n         this.contactIsAdded = true;\n         if (data != null) {\n           console.log(\"OKKKKKK\");\n          \n         this.contact = JSON.parse(JSON.stringify(data));\n           \n           \n         }\n      },\n      error: error => {\n       \n          this.errorMessage = error.message;\n          \n          \n      }\n  })\n  \n}\n//method edit contact\n editContact(contact : Contact){\n    this.contactService.updateContact(contact)\n    .subscribe({\n      next: data => {\n         \n         this.contactIsAdded = true;\n         if (data != null) {\n           console.log('data  ::::    ' + data);\n           console.log(data instanceof String);\n         this.contact = JSON.parse(JSON.stringify(data));\n           \n           \n         }\n      },\n      error: error => {\n          this.errorMessage = error.message;\n          \n          \n      }\n  })\n  \n}\n\n\n//method hasContactAdded\nhasContactAdded(){\n  this.contactIsAdded = false;\n  this.router.navigate(['contacts', this.contact.nom]);\n  \n}\n\n}\n","\n\n\n\n\n\n\n\n<div class=\"block_form flex col\" *ngIf=\"!this.contactIsAdded\">\n \n    <div class=\"container_form flex row\">\n      <div class=\"box flex col\">\n        <h2 >{{title}}</h2>\n        <h3 *ngIf=\"!isCreateContact\">ID: {{contact.id}}</h3>\n       \n        <form class=\"form flex col\" [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\" >\n          <div class=\"inputBox flex row\" >\n            <input id=\"name\" type='text'  formControlName=\"nom\" name=\"name\" required=\"required\" maxlength=\"30\" minlength=\"2\" [value]=\"contact.name\" />\t\n            <label for=\"name\">LastName <span *ngIf=\"contactForm.get('nom').valid\">\n              :Valid \n          </span></label>\n            \n            \n            \n          </div>\n          <div class=\"inputBox flex row\" >\n              <input id=\"bname\" type=\"text\" formControlName=\"prenom\"  name=\"bname\" required=\"required\" maxlength=\"30\" minlength=\"3\" [value]=\"contact.prenom\"/>\n             \n              <label for=\"bname\">FirstName <span *ngIf=\"contactForm.get('prenom').valid\">\n                : Valid   \n            </span></label>\n          </div>\n          <div class=\"inputBox flex row\" >\n            <input id=\"dateNaissance\" type=\"text\"  formControlName=\"dateNaissance\" name=\"dateNaissance\" required=\"required\" maxlength=\"230\" minlength=\"5\" [value]=\"contact.dateNaissance\"/>\n             \n              <label for=\"dateNaissance\">Date of Birth <span *ngIf=\"contactForm.get('dateNaissance').valid\">\n                : Valid \n            </span></label>\n          </div>\n        \n\n          <div class=\"inputBox  flex row\" *ngIf=\"isCreateContact\">\n             \n            <input id=\"email\" type=\"text\"  formControlName=\"email\" name=\"email\" required=\"required\" maxlength=\"230\" minlength=\"5\" [value]=\"contact.email\" />\n             \n              <label for=\"email\">email <span *ngIf=\"contactForm.get('email').valid\">\n                : Valid \n            </span></label>\n          </div>\n\n\n          <div class=\"inputBox flex row\" >\n            <input  type=\"text\" id=\"phone\" formControlName=\"phone\" name=\"phone\" required=\"required\" maxlength=\"30\" minlength=\"2\" [value]=\"contact.phone\"/>\n             \n              <label for=\"phone\">Phone <span *ngIf=\"contactForm.get('phone').valid\">\n                : Valid \n            </span></label>\n            \n          </div>\n          <div class=\"inputBox flex row\" >\n            <input type=\"text\" id=\"photo\" formControlName=\"photo\" name=\"photo\" required=\"required\" maxlength=\"330\" minlength=\"7\" [value]=\"contact.photo\"/>\n             \n              <label for=\"photo\">Photo url <span *ngIf=\"contactForm.get('photo').valid\">\n                : Valid \n            </span></label>\n            \n          </div>\n          \n          \n          \n          <input [disabled] = \"!contactForm.valid\" type=\"submit\" name=\"submit\"  value=\"Create\" *ngIf=\"isCreateContact\" />\n          <input  [disabled] = \"!contactForm.valid\" type=\"submit\" name=\"submit\"  value=\"Update\" *ngIf=\"!isCreateContact\" />\n          \n  \n          \n        </form>\n     \n      </div>\n    </div>\n  \n    <div class=\"error flex row\"  ></div>\n  </div>\n\n\n\n\n\n  <!-- confirmation of the addition of a new contact -->\n<div class=\"block_form flex row\" *ngIf=\"contactIsAdded\">\n\t\t<div class=\"container_form flex row\">\n\t\t\t<div class=\"box box_confirm confirm flex col\">\n\t\t\t\t<div class=\"title flex row\">\n\t\t\t\t\t<h1 >{{contact.prenom}}</h1>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"header flex col\">\n\t\t\t\t\t\n\t\t\t\t\t<p>Please, re-check the details.</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"container flex col\">\n          <p>LastName: {{contact.nom}}</p>\n          <p>email: {{contact.email}} </p>\n          <p >phone: {{contact.phone}}</p>\n          \n          <p id=\"pathphoto\">{{errorPathphoto}}</p>\n        \n        \n         \n\t\t\t\t</div>\n\t\t\t\n\n\t\t\t\t<div class=\"newRes flex col\">\n            <!-- <input id=\"inputSave\" type=\"submit\" name=\"contactAdded\" value=\"List Of contacts\" (click)=\"hasContactAdded()\"/> -->\n\t\t\t\t\t<button class=\"button_search\" name=\"contactAdded\" (click)=\"hasContactAdded()\">List Of contacts</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</div>\n  </div>\n  \n\n\n  ","export class Contact {\n\t/**\n\t * \n\t */\n\t\n\t\n\tpublic id : any = null;\n\tpublic nom : string = '';\n\tpublic  prenom : string = '';\n\t\n\tpublic  dateNaissance: Date;\n\tpublic email : string = '';\n\tpublic  phone : string = '';\n\tpublic photo : string = '';\n\t\n\tpublic Contact() {\n\t\t// TODO Auto-generated constructor stub\n\t}\n\n\tpublic  getNom(): string {\n\t\treturn this.nom;\n\t}\n\n\tpublic  setNom( nom : string): any {\n\t\tthis.nom = nom;\n\t}\n\n\tpublic  getPrenom() : string {\n\t\treturn this.prenom;\n\t}\n\n\tpublic  setPrenom( prenom : string) : any{\n\t\tthis.prenom = prenom;\n\t}\n\n\tpublic  getDateNaissance() :Date{\n\t\treturn this.dateNaissance;\n\t}\n\n\tpublic  setDateNaissance(dateNaissance : Date): any {\n\t\tthis.dateNaissance = dateNaissance;\n\t}\n\n\tpublic getEmail() : string {\n\t\treturn this.email;\n\t}\n\n\tpublic setEmail( email : string) {\n\t\tthis.email = email;\n\t}\n\n\tpublic  getPhone(): string {\n\t\treturn this.phone;\n\t}\n\n\tpublic setPhone(phone : string) {\n\t\tthis.phone = phone;\n\t}\n\n\tpublic  getPhoto() : string{\n\t\treturn this.photo;\n\t}\n\n\tpublic setPhoto(photo : string) {\n\t\tthis.photo = photo;\n\t}\n\n\tpublic  getId(): number {\n\t\treturn this.id;\n\t}\n\n\tpublic  setId( id: number) {\n\t\tthis.id = id;\n\t}\n\t\n\t\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'contactNG';\n  \n}\n","\n\n<div class=\"app flew col\">\n  <app-menu></app-menu>\n \n  <div class=\"container\">\n      <router-outlet></router-outlet>\n  </div>\n\n  <app-footer></app-footer>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-architecture',\n  templateUrl: './architecture.component.html',\n  styleUrls: ['./architecture.component.css']\n})\nexport class ArchitectureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"block flex col\">\n    <div class=\"container flex row\">\n        <div class=\"colSmall  angular flex col\">\n            <h2>Angular</h2>\n        </div>\n        <div class=\"container_arrow flex col\">\n            <div class=\"container_arrow-right flex row\">\n                    <div class=\"borderSmall\"></div>\n                    <div class=\"arrow-right\"></div>\n            </div>\n            <div class=\"title\">\n                <h2>HTTP</h2>\n                <h2>JSON</h2>\n            </div>\n            <div class=\"container_arrow-left flex row\">\n                    <div class=\"arrow-left\"></div>\n                    <div class=\"borderSmall\"></div>\n                    \n            </div>\n            \n                \n        </div>\n\n        <div class=\"colLarge flex col\">\n                <h1>Micro service</h1>\n               <div class=\"container_cols flex col\">\n                    <div class=\"container_row_top flex col\">\n                            <h3>Spring Boot IOC Container</h3>\n                    </div>\n                        <div class=\"container_row_bottom flex row\">\n                               <div class=\"bloc_web flex col\" >\n                                   <div class=\"s_title flex col\">Web\n                                       \n                                   </div>\n                                   <div class=\"container_web flex col\">\n                                        <div class=\"container_one flex col\">\n                                            <p>\t&#60;&#60;  Service  &#62;&#62;</p>\n                                            <p>Contact RestService</p>\n                                        </div>\n                                        <div class=\"container_two flex row\">\n                                                <div></div>\n                                                Embedded Tomcat</div>\n                                       \n                                   </div>\n                                \n                               </div>\n                               <div class=\"bloc_dao flex col\">\n                                    <div class=\"s_title flex col\">DAO\n                                            \n                                    </div>   \n                                    <div class=\"container_dao flex col\">\n                                            <div class=\"entity flex col\">\n                                                <div class=\"flex row\"><p>\t&#60;&#60;  Entity &#62;&#62;</p></div>\n                                                <div class=\"flex row\"><p>Contact </p></div>\n                                            </div>\n\n                                            <div class=\"container_arrow-down flex col\">\n                       \n                                                    <div class=\"borderSmallDown flex col\"></div>\n                                                    <div class=\"arrow-down\"></div>\n                                            </div>\n                                            <div class=\"interface flex col\">\n                                                 <div class=\"flex row\">   <p>\t&#60;&#60;  Interface &#62;&#62;</p></div>\n                                                  <div class=\"flex row\">  <p>ContactRepository </p></div>\n                                            </div>\n                                            <div class=\"container_arrow-down flex col\">\n                       \n                                                    <div class=\"borderSmallDown flex col\"></div>\n                                                    <div class=\"arrow-down\"></div>\n                                            </div>\n                                            <div class=\"data flex col\">Spring Data</div>\n                                            <div class=\"container_arrow-down flex col\">\n                       \n                                                    <div class=\"borderSmallDown flex col\"></div>\n                                                    <div class=\"arrow-down\"></div>\n                                            </div>\n                                            <div class=\"data flex col\">JPA </div>\n                                            <div class=\"container_arrow-down flex col\">\n                       \n                                                    <div class=\"borderSmallDown flex col\"></div>\n                                                    <div class=\"arrow-down\"></div>\n                                            </div>\n                                            <div class=\"data flex col\">Hibernate</div>\n                                            <div class=\"container_arrow-down flex col\">\n                       \n                                                    <div class=\"borderSmallDown flex col\"></div>\n                                                    <div class=\"arrow-down\"></div>\n                                            </div>\n                                            <div class=\"data flex col\">JDBC</div>\n                                           \n                                       </div>\n                                  \n                               </div>\n                        </div>\n               </div>\n        </div>\n        <div class=\"container_arrow flex row\">\n                <div class=\"container_arrow-left flex row\">\n                        <div class=\"arrow-left\"></div>\n                        <div class=\"borderSmall\"></div>\n                        <div class=\"arrow-right\"></div>\n                </div>\n\n        </div>\n        \n        <div class=\"colSmall sgdb flex col\">\n            \n            \n                <div><h2>SGDB</h2></div>\n                <div class=\"photo_bdd\"></div>\n            </div>\n\n    </div>\n    <button class=\"button_search\" routerLink=\"/about\">Go back</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<header class=\"header flex row \">\n\t\t\n\t\t\n\t\t\n    <div class='container_menu flex row'>\n      <div class=\"header_logo flex col\">\n          <div class=\"logo flex col\"></div>\n       </div>\n      <div class=\"menu flex row\">\n          <div class=\"cols flex row\"><a routerLink=\"/about\" >About</a></div>\n        <div class=\"cols flex row\"><a routerLink=\"/contacts\" >Contacts</a></div>\n       \n         <div class=\"cols flex row\"><a routerLink=\"/createContact\" >Create Contact</a></div>\n       \n       \n        \n      </div>\n      \n      \n    </div>\n  \n   \n  \n  </header>\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes} from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AboutComponent } from './about/about.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { SaveContactComponent } from './save-contact/save-contact.component';\nimport { CreateContactComponent } from './create-contact/create-contact.component';\nimport { DetailContactComponent } from './detail-contact/detail-contact.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { SnipperComponent } from './snipper/snipper.component';\nimport { UpdateContactComponent } from './update-contact/update-contact.component';\nimport { ContactsService } from  'src/services/contacts.service';\nimport { ArchitectureComponent } from './architecture/architecture.component';\n\n\nconst APPROUTES: Routes = [\n\n  {path: 'about', component:AboutComponent},\n  {path: '',\n  redirectTo: '/about', pathMatch: 'full'},\n  \n  {path: 'createContact/:id', component:CreateContactComponent},\n  {path: 'createContact', component:CreateContactComponent},\n  {path: 'snipper', component:SnipperComponent},\n  \n  {path: 'contacts', component: ContactsComponent},\n  {path: 'contacts/:keyword', component: ContactsComponent},\n  {path: 'detail/:id', component:DetailContactComponent},\n  {path: 'updateContact', component: UpdateContactComponent},\n  {path: 'updateContact/:id', component: UpdateContactComponent},\n  {path: 'architecture', component:  ArchitectureComponent},\n \n  {path: 'contact', component:FooterComponent}\n]\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    \n    AboutComponent,\n    \n    FooterComponent,\n    \n    MenuComponent,\n    \n    SaveContactComponent,\n    \n    CreateContactComponent,\n    \n    DetailContactComponent,\n    \n    ContactsComponent,\n    \n    SnipperComponent,\n    \n    UpdateContactComponent,\n    \n    ArchitectureComponent,\n    \n    \n  ],\n  imports: [\n    BrowserModule, HttpClientModule, RouterModule.forRoot(APPROUTES),\n    FormsModule, ReactiveFormsModule\n  ],\n  providers: [ContactsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container_footer flex col\" >\n\n    <div class=\"footer_parag1 flex col\">\n\n      <div class=\"badria flex col\">\n        <p>Anais NGUYEN</p>\n      </div>\n\n        <p>FRANCE</p>\n\n     </div>\n\n    <div class=\"footer_contact flex row\">\n      <div class=\"contact flex row\">\n        <div class=\"phone flex row\">\n          \n          \n          <p id=\"p1\"> Phone:33 06 09 28 01 67</p>\n          \n        </div>\n        \n        <div class=\"mail flex row\">\n          <a href=\"mailto:anaisnguyen19@gmail.com\">MAIL -\n            CONTACT@ANAIS.FR</a>\n        </div>\n\n      </div>\n      \n  </div>\n  <div class=\"copyright flex row\">\n    <p id=\"p2\">©ANAIS 2021 ALL RIGHTS RESERVED</p>\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-save-contact',\n  templateUrl: './save-contact.component.html',\n  styleUrls: ['./save-contact.component.css']\n})\nexport class SaveContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>save-contact works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ContactsService } from 'src/services/contacts.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { Contact } from 'src/model/contact';\n\n\n\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent  {\n\n  //declaration variables\n\n  contacts : Contact[];\n  c : Contact;\n  keyword: string = '';\n  currentPage: number = 0;\n  size: number = 4;\n  totalOfElements = 0;\n  sizeArray: Array<Number>= [];\n  pages: Array<Number>= [];\n  hasError : boolean = true;\n  errorMessage : string = '';\n  \n  showSnipper : boolean = true;\n//constructor\n  constructor(public contactService: ContactsService, \n    public activatedRoute: ActivatedRoute,\n    public router: Router) { \n      if (this.activatedRoute.snapshot.params['keyword'] != null) {\n        this.keyword = this.activatedRoute.snapshot.params['keyword'];\n        \n      }\n      this.getListContacts();\n    }\n\n\n\n//method to get list of contacts\n  getListContacts(){\n   \n   \n    /*\n    this function return an Object ele:  \n    [ele Object] where ele.content is an Array of Object Plant, autrement dit\n    plants est une page de Plant\n     length of this array est size: la taille de la page (combient de plant elel contient)\n     ele contient donc nos pages Plant plus le détail de request comme:\n     totalPages, size, etc ..\n    (this.contactService.showPlantsByKw(this.keyword, this.currentPage, this.size)\n    <=>\n    object observable)\n    */\n    this.contactService.showContactsByKw(this.keyword, this.currentPage, this.size)\n    .subscribe(ele => {\n     \n     \n      this.hasError = false;\n      this.showSnipper = false;\n      this.contacts = ele.content;\n     \n     \n      this.pages = new Array(ele.totalPages);\n      \n       this.sizeArray = new Array(ele.size);\n       this.totalOfElements = ele.totalElements;\n      \n       this.currentPage = ele.number;\n      \n     \n      \n      \n       \n      \n\n    }, error=> {\n      this.errorMessage = \"Http failure response \";\n          console.error('errorMsg   !', this.errorMessage);\n          \n  });\n    \n \n  \n   \n  }\n\n//method chercher\n  chercher(){\n    \n    this.getListContacts();\n     \n     \n   }\n\n//method go to page\n\ngoToPage(i:number){\n   \n  this.currentPage = i;\n \n  this.getListContacts();\n \n}\n\n//method update contact\n\nonUpdateContact(id:number){\n  //console.log(codePlant);\n  this.router.navigate(['createContact', id]);\n  //this.router.navigate(['createPlant', codePlant]);\n}\n\n//method delete contact\n\nonDelete(contact : Contact){\n  \n\n  if (confirm('Are sure you want to remove this contact')) {\n   \n    this.contactService.deleteContact(contact.id)\n    .subscribe({\n      next: data => {\n         \n         if (data) {\n           \n        \n         this.contacts.splice(\n          this.contacts.indexOf(contact), 1\n         );\n           \n           \n         }\n      },\n      error: error => {\n          this.errorMessage = \"Http failure response\" ;\n          console.error('msg   !', this.errorMessage);\n          \n      }\n  })\n    \n  }\n \n}\n\n/**\n * navigate to detail of contact page\n */\n    onDetail(id){\n      \n      this.router.navigate(['detail', id]);\n    \n      \n    }\n\n}\n","\n\n<div class=\"plants_block flex col\">\n    <div class=\"errorMessage flex row\" *ngIf=\"hasError\">{{errorMessage}}</div>\n    <div class=\"plants_container flex col\">\n       \n       \n          <div class=\"form-plants flex col\">\n           \n             <div class=\"container_search flex col\">\n              <input class=\"search\" type=\"search\" [(ngModel)]=\"keyword\"  name=\"keyword\"  placeholder=\"search contact by name\" \n              required  #search [value]=\"keyword\">\n      \n              <button class=\"button_search\" (click)=\"chercher()\">Look for</button>\n              \n             </div>\n           \n           \n          </div>\n          \n          <div class=\"list_plants_conatiner flex col\">\n             <!--  begin  snipper -->\n              <div class=\"load flex col\" id=\"load\" *ngIf=\"showSnipper\" >\n             \n                  <app-snipper ></app-snipper>\n                 \n                 \n              </div>\n               <!--  end  snipper -->\n            <div class=\"list_plants flex col\" *ngIf=\"totalOfElements != 0\">\n              <div class=\"title flex row\" >Contacts</div>\n              <table class=\"table table-striped\">\n                <tr>\n                  <th>Id</th><th>Last name</th><th>First Name</th><th>Date of Birth</th><th>Email</th>\n                </tr>\n                 <tr *ngFor=\"let c of contacts\">\n                    <td>{{c.id}}</td>\n                    <td>{{c.nom}}</td>\n                    <td>{{c.prenom}}</td>\n                    <td>{{c.dateNaissance}}</td>\n                    <td>{{c.email}}</td>\n                 \n                \n                  <td >\n                    <a id=\"update\" (click)=\"onUpdateContact(c.id)\">Update</a>\n                   \n                  </td>\n                  <td >\n                      <a id=\"delete\" (click)=\"onDelete(c)\">delete</a>\n                  </td>\n                  <td >\n                      <a id=\"detail\" (click)=\"onDetail(c.id)\">&#43;</a>\n                    \n                  </td>\n                </tr> \n    \n              </table>\n              <div class=\"container_pages flex col\"  *ngIf=\"pages != 0\">\n                  <div id=\"totalRows\" >Total contacts&#58; {{totalOfElements}}&#59;   Page&#58; {{currentPage}}</div>\n                  <div class=\"listPages flex row\">\n                    <div class=\"previous flex row\">\n                      <a class=\"flex row\" *ngIf=\"currentPage != 0\" (click)=\"goToPage(currentPage -1)\">&#60;</a>\n                      <span class=\"flex row\" *ngIf=\"currentPage == 0\" >&#60;</span>\n                    </div>\n                      <div class=\"pages_numbers flex row\" *ngIf=\"pages != 1\">\n                      \n                        <span class=\"span_container flex row\" [ngClass]=\"{'active': i ==  currentPage}\"\n                        *ngFor=\"let p of sizeArray, let i=index\">\n                          <a class=\"flex row\"  (click)=\"goToPage(i+ currentPage)\" >{{i+ currentPage}}</a>\n                    \n                        </span>\n                      \n                        \n                      </div>\n                      <div class=\"next flex row\">\n                        <a class=\"flex row\" *ngIf=\"pages != currentPage\" (click)=\"goToPage(currentPage +1)\">&#62;</a>\n                        <span class=\"flex row\" *ngIf=\"currentPage == pages\" >&#62;</span>\n                      </div>\n                    \n                  </div>\n                </div>\n            </div> \n          </div>\n          \n      \n      </div>\n</div>\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Contact } from 'src/model/contact';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n\n  private AWS_URI = \"http://anaiscontact.eu-west-3.elasticbeanstalk.com\";\n \n  private headers = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Allow-Methods': 'GET,POST,OPTIONS,DELETE,PUT',\n    'Authorization': '',\n  }\n\n  constructor(public http: HttpClient) { }\n\n  // method get contacts By Key word\n  showContactsByKw(kw: string, page:number, size: number): Observable<any>{\n    //this function return an Object [o Object] Observable\n    let url : string = this.AWS_URI + '/getContacts?kw=' + kw + '&size=' + size+ '&page=' + page;\n    //let url = 'http://localhost:8080/getContacts?kw=' + kw + '&size=' + size+ '&page=' + page;\n    return this.http.get(url);\n   \n   \n    }\n\n\n\n    /**\n * \n * @param plant method add Plant to server\n */\n  saveContact(contact : Contact){\n   \n    let url : string = this.AWS_URI +\"/contacts\";\n    const headers = { 'content-type': 'application/json'}  \n    \n    \n  \n    return this.http.post(url,  contact,{'headers':headers});\n   \n  }\n\n/**\n * \n * @param id Update Plant method from server\n */\n\n\nupdateContact(contact : Contact){\n    \n  let url : string = this.AWS_URI +'/contacts/'  +contact.id;\n    //let url : string = 'http://localhost:8080/contacts/' \n  \n    return this.http.post(url,  contact,{'headers':this.headers});;\n  }\n/**\n * \n * @param id Delete plant from server\n */\n\n    deleteContact(id: number){\n      \n    \n      \n      let url : string = this.AWS_URI +'/contacts/'  +id;\n\n     // let url : string =  'http://localhost:8080/contacts/'  + id;\n      \n      \n      \n      let res = this.http.delete(url, {'headers':this.headers} );\n      \n      return res;\n    }\n\n\n    /**\n * \n *  method get plantById from server\n */\n  getContact(id: number): Observable<any>{\n    \n    let p : any;\n     \n    //let url = 'http://localhost:8080/contacts/' +id;\n    let url : string = this.AWS_URI +'/contacts/'  + id;\n   \n  \n    p = this.http.get(url, {'headers':this.headers});\n   \n    return p;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snipper',\n  templateUrl: './snipper.component.html',\n  styleUrls: ['./snipper.component.css']\n})\nexport class SnipperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n  <div class=\"spiner_container flex row\">\n    <div class=\"loader flex row\">\n  \n</div>\n\n  \n</div>\n\n\n\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}